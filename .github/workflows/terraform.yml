name: Deploy Compute Engine to GCP

on:
  push:
    branches:
      - master    # Trigger this workflow on push to the main branch
  pull_request:
    branches:
      - master    # Trigger this workflow on pull request to main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"  # Set the version of Terraform you need

      # Step 3: Authenticate with GCP using the service account JSON stored in GitHub Secrets
      - name: Authenticate with GCP
        run: echo '${{ secrets.GCP_SA_KEY }}' > ${{ github.workspace }}/account.json
      
      - name: Set GCP Credentials Environment Variable
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=${{ github.workspace }}/account.json" >> $GITHUB_ENV

      - name: Setup Terraform Backend
        id: backend
        run: |
          cat > backend.tf << EOF
          terraform {
            backend "gcs" {
              bucket = "avi-hero-no-1"
              prefix = "terraform/state"
             }
            }
          EOF
        
      # Step 4: Initialize Terraform
      - name: Initialize Terraform
        working-directory: ./
        run: terraform init

      # Step 5: Plan Terraform Changes
      - name: Plan Terraform Changes
        working-directory: ./
        run: terraform plan -var-file="./terraform.tfvars"

      # Step 6: Apply Terraform Changes
      #- name: Apply Terraform Changes
      #  working-directory: ./
      #  run: terraform apply -auto-approve -var-file="./terraform.tfvars"

      # Optional: Step 7: Terraform Destroy (If you want to destroy the resources)
      - name: Terraform Destroy
        run: terraform destroy -auto-approve -var-file="./terraform.tfvars"
